                                              Ecommerce – SQL

CREATE TABLE cust(
    customer_id INT PRIMARY KEY ,
    first_name VARCHAR(20) NOT NULL,
    last_name VARCHAR(20) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    address TEXT NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY ,
    name VARCHAR(20) NOT NULL,
    description TEXT,
    price DECIMAL(10,2) NOT NULL,
    stock_quantity INT NOT NULL 
);

CREATE TABLE cart (
    cart_id INT PRIMARY KEY ,
    customer_id INT,
    product_id INT,
    quantity INT NOT NULL ,
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) ,
    FOREIGN KEY (product_id) REFERENCES products(product_id) 
);

CREATE TABLE orders (
    order_id INT PRIMARY KEY ,
    customer_id INT,
    order_date DATE NOT NULL,
    total_price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) 
);

CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY AUTO_INCREMENT,
    order_id INT,
    product_id INT,
    quantity INT NOT NULL CHECK (quantity > 0),
    item_price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (order_id) REFERENCES orders(order_id) ,
    FOREIGN KEY (product_id) REFERENCES products(product_id) 
);


 INSERT INTO product (product_id,name, description, price, stock_quantity) VALUES
    -> (1,'Laptop', 'High-performance laptop', 800.00, 10),
    -> (2,'Smartphone', 'Latest smartphone', 600.00, 15),
    -> (3,'Tablet', 'Portable tablet', 300.00, 20),
    -> (4,'Headphones', 'Noise-canceling', 150.00, 30),
    -> (5,'TV', '4K Smart TV', 900.00, 5),
    -> (6,'Coffee Maker', 'Automatic coffee maker', 50.00, 25),
    -> (7,'Refrigerator', 'Energy-efficient', 700.00, 10),
    -> (8,'Microwave Oven', 'Countertop microwave', 80.00, 15),
    -> (9,'Blender', 'High-speed blender', 70.00, 20),
  -> (10,'Vacuum Cleaner', 'Bagless vacuum cleaner', 120.00, 10);
  
   INSERT INTO cust (customer_id,email,first_name, last_name, address) VALUES
      -> (1,'johndoe@example.com','John', 'Doe',  '123 Main St, City'),
      -> (2, 'janesmith@example.com','Jane', 'Smith', '456 Elm St, Town'),
      -> (3,'robert@example.com','Robert', 'Johnson',  '789 Oak St, Village'),
      -> (4, 'sarah@example.com', 'Sarah', 'Brown','101 Pine St, Suburb'),
      -> (5,'david@example.com', 'David', 'Lee', '234 Cedar St, District'),
      -> (6,'laura@example.com','Laura', 'Hall',  '567 Birch St, County'),
      -> (7,'michael@example.com','Michael', 'Davis',  '890 Maple St, State'),
      -> (8,'emma@example.com', 'Emma', 'Wilson', '321 Redwood St, Country'),
      -> (9, 'william@example.com', 'William', 'Taylor','432 Spruce St, Province'),
      -> (10,'olivia@example.com', 'Olivia', 'Adams', '765 Fir St, Territory');
  
   INSERT INTO orders(order_id,customer_id, order_date, total_price) VALUES
      -> (1,1, '2023-01-05', 1200.00),
      -> (2,2, '2023-02-10', 900.00),
      -> (3,3, '2023-03-15', 300.00),
      -> (4,4, '2023-04-20', 150.00),
      -> (5,5, '2023-05-25', 1800.00),
      -> (6,6, '2023-06-30', 400.00),
      -> (7,7, '2023-07-05', 700.00),
      -> (8,8, '2023-08-10', 160.00),
      -> (9,9, '2023-09-15', 140.00),
      -> (10,10, '2023-10-20', 1400.00);
  
  
  INSERT INTO order_items (order_item_id,order_id, product_id, quantity, item_price) VALUES
      -> (1,1, 1, 2, 1600.00),
      -> (2,1, 3, 1, 300.00),
      -> (3,2, 2, 3, 1800.00),
      -> (4,3, 5, 2, 1800.00),
      -> (5,4, 4, 4, 600.00),
      -> (6,4, 6, 1, 50.00),
      -> (7,5, 1, 1, 800.00),
      -> (8,5, 2, 2, 1200.00),
      -> (9,6, 10, 2, 240.00),
      -> (10,6, 9, 3, 210.00);
  
  
  INSERT INTO cart (cart_id,customer_id, product_id, quantity) VALUES
      -> (1,1, 1, 2),
      -> (2,1, 3, 1),
      -> (3,2, 2, 3),
      -> (4,3, 4, 4),
      -> (5,3, 5, 2),
      -> (6,4, 6, 1),
      -> (7,5, 1, 1),
      -> (8,6, 10, 2),
      -> (9,6, 9, 3),
      -> (10,7, 7, 2);


1)update product set price=800 where name ="refrigerator";

2)delete from cart where customer_id=2;

3)select * from product where price<100;

4)select * from product where stock_quantity>5;

5)select * from orders where total_price BETWEEN 500 AND 1000;

6)select * from product where name like "%r";

7)select * from cart where customer_id =5;

8)select DISTINCT cust.* from cust join orders on cust.customer_id = orders.customer_id where year(order_date)=2023;

9)select min(stock_quantity) AS MIN_STOCK from product group by product_id;

10)select cust.customer_id,cust.first_name, cust.last_name ,sum(orders.total_price) AS total_spent from cust join orders on cust.customer_id = orders.customer_id group by cust.customer_id;

10)select cust.customer_id,cust.first_name, cust.last_name ,avg(orders.total_price) AS average_amount from cust join orders on cust.customer_id = orders.customer_id group by cust.customer_id;

12)select customer_id , count(order_id) AS total_orders from orders group by customer_id;

13)select customer_id ,max(total_price) AS maximum_amount from orders group by customer_id;

14) SELECT cust.customer_id, cust.first_name, cust.last_name,
    ->        SUM(orders.total_price) AS total_spent
    -> FROM cust
    -> JOIN orders ON cust.customer_id = orders.customer_id
    -> GROUP BY cust.customer_id
  -> HAVING total_spent > 1000;
  
15)select * from product where product_id NOT IN (select product_id from cart);

16)select * from cust where customer_id NOT IN (select customer_id from orders);

17)SELECT product_id,
    -> (SUM(item_price) / (SELECT SUM(total_price) FROM orders)) * 100 AS revenue_percentage
    -> FROM order_items
  -> GROUP BY product_id;
  
18)SELECT product_id, name, stock_quantity
    -> FROM product
  -> WHERE stock_quantity < (SELECT AVG(stock_quantity) FROM product);
  
19)SELECT customer_id, first_name
    -> FROM cust
    -> WHERE customer_id IN (
    ->     SELECT customer_id
    ->     FROM orders
    ->     WHERE total_price> (SELECT AVG(total_price) FROM orders)
    -> );
